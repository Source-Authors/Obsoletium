name: 'Setup Build'
description: 'Setup env & generate solution'

inputs:
  platform-name:
    description: 'Platform name <x86, x64, arm64>'
    required: true
  configuration-name:
    description: 'Configuration name <Debug / Release>'
    required: true
  solution-name:
    description: 'Solution name to generate'
    required: true

runs:
  using: "composite"
  steps:
  - name: Add MSBuild to PATH
    uses: microsoft/setup-msbuild@v2
    with:
      msbuild-architecture: ${{matrix.platform-name}}

  - name: Add cmake / nmake to PATH
    uses: ilammy/msvc-dev-cmd@v1
    with:
      arch: ${{inputs.platform-name}}

  - name: 'Build dependencies for ${{inputs.solution-name}}_${{inputs.platform-name}}.sln'
    working-directory: ${{env.GITHUB_WORKSPACE}}
    run: .\build_game_thirdparty.bat ${{inputs.platform-name}}
    shell: cmd

  - name: 'Generate solution ${{inputs.solution-name}}_${{inputs.platform-name}}.sln'
    working-directory: ${{env.GITHUB_WORKSPACE}}
    run: .\create_game_projects.bat ${{inputs.solution-name}} ${{inputs.platform-name}}
    shell: cmd

  - name: '${{inputs.configuration-name}} build solution ${{inputs.solution-name}}_${{inputs.platform-name}}.sln'
    working-directory: ${{env.GITHUB_WORKSPACE}}
    run: msbuild ${{inputs.solution-name}}_${{inputs.platform-name}}.sln /m -verbosity:minimal /p:Configuration=${{inputs.configuration-name}} /p:Platform=${{inputs.platform-name}}
    shell: cmd
