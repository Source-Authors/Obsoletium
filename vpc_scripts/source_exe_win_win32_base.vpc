//-----------------------------------------------------------------------------
//	SOURCE_EXE_WIN_WIN32.VPC
//
//	Base Settings for Source(TM) Projects
//-----------------------------------------------------------------------------

$Include "$SRCDIR\vpc_scripts\version.vpc"

$MacroRequired				"SRCDIR"
$MacroRequired				"OUTBINNAME"	"$PROJECTNAME"
$MacroRequired				"OUTBINDIR"

$Macro OUTBINDIR	"$OUTBINDIR$PLATSUBDIR"
$Macro LIBPUBLIC	"$SRCDIR\lib\public$PLATSUBDIR"
$Macro LIBCOMMON	"$SRCDIR\lib\common$PLATSUBDIR"

$Include "$SRCDIR\vpc_scripts\loadaddress.vpc"
$Include "$SRCDIR\vpc_scripts\source_exe_win_win32_debug.vpc"
$Include "$SRCDIR\vpc_scripts\source_exe_win_win32_release.vpc"
$Include "$SRCDIR\vpc_scripts\source_win32_base.vpc"

$IgnoreRedundancyWarning	"ON"

// Common Configuration
$Configuration
{
	$General
	{
		$TargetName							"$OUTBINNAME"
	}

	$General
	{
		$AdditionalProjectDependencies		"$BASE;newdat" [!$ANALYZE]
	}

	$Compiler
	{		
		$PreprocessorDefinitions			"$BASE;EXENAME=$OUTBINNAME;_DLL_EXT=$_DLL_EXT"
	}

	$Compiler [$WIN32]
	{
		$EnableEnhancedInstructionSet		"Streaming SIMD Extensions 2 (/arch:SSE2)"
	}
	
	$Linker
	{
		$TargetMachine						"MachineX86 (/MACHINE:X86)"	[$WIN32]
		$TargetMachine						"MachineX64 (/MACHINE:X64)"	[$WIN64]
		// dimhotepus: Hardening build.
		$TreatLinkerWarningsAsErrors		True
		// dimhotepus: Hardening runtime.
		$RandomizedBaseAddress				True
		// dimhotepus: Hardening runtime. Requires /LARGEADDRESSAWARE and /DYNAMICBASE
		$AdditionalOptions					"$BASE /HIGHENTROPYVA"	[$WIN64]
		// NXCOMPAT (also known as DEP or Data Access Protection) should be enabled for all
		// executables for security and debugging reasons.
		$AdditionalOptions					"/NXCOMPAT"
		// Suppress this pointless warning using the undocumented /ignore linker switch
		// schemalib.lib(schemaclassinfo.obj) : warning LNK4221: This object file does not define any previously undefined public symbols, so it will not be used by any link operation that consumes this library
		// $AdditionalOptions				"$BASE /ignore:4221"
	}

	$ManifestTool
	{
		// Input And Output
		$AdditionalManifestFiles			"$BASE;$SRCDIR\build\win\manifests\dpi-aware.manifest;$SRCDIR\build\win\manifests\ultra-high-scroll-resolution.manifest;$SRCDIR\build\win\manifests\utf-8-code-page.manifest;$SRCDIR\out\manifests\enable-visual-styles.manifest" [!$SOURCESDK]
	}
	
	$PreBuildEvent
	{
		$CommandLine		"IF EXIST $QUOTE$OUTBINDIR\$(TargetFileName)$QUOTE (" "\n" \
							"	FOR /f $QUOTEdelims=$QUOTE %%A IN ('ATTRIB $QUOTE$OUTBINDIR\$(TargetFileName)$QUOTE') DO SET valveTmpIsReadOnly=$QUOTE%%A$QUOTE" "\n" \
							")" "\n" \
							"SET valveTmpIsReadOnlyLetter=%valveTmpIsReadOnly:~6,1%" "\n" \
							"IF $QUOTE%valveTmpIsReadOnlyLetter%$QUOTE==$QUOTER$QUOTE (" "\n" \
							"	DEL /q $QUOTE$(TargetDir)$(TargetFileName)$QUOTE" "\n" \
							")" "\n" \
							"$CRCCHECK" "\n"
	}

	$PostBuildEvent [!$ANALYZE]
	{
		$CommandLine		"IF NOT EXIST $QUOTE$OUTBINDIR$QUOTE MKDIR $QUOTE$OUTBINDIR$QUOTE" "\n" 
		$CommandLine		"$BASE" "COPY $QUOTE$(TargetDir)$(TargetFileName)$QUOTE $QUOTE$OUTBINDIR\$(TargetFileName)$QUOTE >nul" "\n" \
							"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
							// "SignTool sign /f $QUOTE$(SolutionDir)devtools\certificates\dev\local-dev-app-sign.pfx$QUOTE /p $QUOTEK)(#JF*56U8$RJO_)P#6NJP762OKAE$QUOTE /fd SHA512 /td SHA512 /tr http://timestamp.sectigo.com $QUOTE$OUTBINDIR\$(TargetFileName)$QUOTE" "\n" \
							// "IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
							"IF NOT $QUOTE$(TargetFileName)$QUOTE == $QUOTEnewdat.exe$QUOTE (" "\n" \
							"    $QUOTE$OUTBINDIR\newdat$QUOTE $QUOTE$OUTBINDIR\$(TargetFileName)$QUOTE" "\n" \
							"    IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
							")" "\n" \

							"IF EXIST $QUOTE$(TargetDir)$(TargetName).map$QUOTE COPY $QUOTE$(TargetDir)$(TargetName).map$QUOTE $QUOTE$OUTBINDIR\$(TargetName).map$QUOTE >nul" "\n"
		$CommandLine		"$BASE"	"COPY $QUOTE$(IntDir)$(TargetName).pdb$QUOTE $QUOTE$OUTBINDIR\$(TargetName).pdb$QUOTE >nul" "\n" \
							"IF ERRORLEVEL 1 GOTO BuildEventFailed" "\n" \
							"GOTO BuildEventOK" "\n" \
							":BuildEventFailed" "\n" \
							"ECHO *** ERROR! PostBuildStep FAILED for $(ProjectName)! $(TargetFileName) is probably running. ***" "\n" \
							"DEL /q $QUOTE$(TargetDir)$(TargetFileName)$QUOTE" "\n" \
							"EXIT 1" "\n" \
							":BuildEventOK" "\n"
		$Description		"Publishing $(TargetFileName) to $OUTBINDIR"
		$ExcludedFromBuild	"No"
	}
}

// Skeleton Project - All derived projects get this as a starting base
$Project
{
	$Folder	"Source Files"
	{
		$File	"$SRCDIR\public\tier0\memoverride.cpp"
		{
			$Configuration
			{
				$Compiler
				{
					$Create/UsePrecompiledHeader	"Not Using Precompiled Headers"
				}
			}
		}
	}

	$Folder	"Link Libraries"
	{
		$Implib	"$LIBPUBLIC\tier0"
		$Lib	"$LIBPUBLIC\tier1"
		$Implib	"$LIBPUBLIC\vstdlib"
	}

	$Folder "Resource Scripts" [$WINDOWS]
	{
		$File	"$SRCDIR\build\win\resource_scripts\windows_app_base.rc"
	}
}

