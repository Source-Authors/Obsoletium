// Settings for /analyze are in a separate .vpc file so that they can be
// changed without triggering a full rebuild of non-analyze builds. On non-analyze
// builds the analyze.vpc file will not be listed as a dependency.
$Include "$SRCDIR\vpc_scripts\source_win32_analyze.vpc" [$ANALYZE]

$Conditional	$AT_LEAST_VS2015	"true" [$VS2015]
$Conditional	$AT_LEAST_VS2013	"true" [$VS2013 || $AT_LEAST_VS2015]

$Configuration
{
	$General
	{
		// Request a specific compiler toolset.
		$PlatformToolset "v100" [$VS2010]

		// dimhotepus: Use newer toolset as XP is out of support.
		$PlatformToolset "v143" [$VS2015]
	}

	$General
	{
		$ExecutableDirectories "$(ExecutablePath);$(Path)"
	}

	$Compiler
	{
		// dimhotepus: Enable Secure Development Lifecycle by default.
		$SDLCheck							"True"

		$MultiProcessorCompilation			"True"

		// dimhotepus: Add AddressSanitizer and LibFuzzer support.
		$EnableASAN							"True" [$ASAN]
		$EnableFuzzer						"True" [$FUZZER]

		// Having lots of warnings makes it harder to notice new, and possibly
		// important warnings, both on buildbot and in the output window. Lots
		// of warnings also makes it harder to skip through errors in the output
		// window since F8 stops on both warnings and errors. The only way to
		// keep the warning count down is to have warnings-as-errors.
		// We will not be warning free on 64-bit for a while...

		// dimhotepus: Do not treat warnings as errors, there are too much warnings to fix at once.
		// $TreatWarningsAsErrors			"Yes (/WX)" [!$ANALYZE && !$WIN64]
		$TreatWarningsAsErrors				"No (/WX-)"

		// Defines to differentiate 32 from 64 bit builds
		$PreprocessorDefinitions			"$BASE;COMPILER_MSVC;COMPILER_MSVC64;PLATFORM_64BITS;WIN64;_WIN64" [$WIN64]
		$PreprocessorDefinitions			"$BASE;COMPILER_MSVC;COMPILER_MSVC32" [$WIN32]

		// dimhotepus: Enable CFG by default.
		$ControlFlowGuard					"Control Flow Guard (/guard:cf)"

		// /Gw is a VS 2013 option that puts global and static variables in individual sections so that the
		// linker can discard unreferenced data. When building @client /dota with linker optimizations this
		// reduces the client.dll size by about 1.14%. When linker optimizations are disabled this has no
		// effect. This option does not show up in the IDE so we need to add it in $AdditionalOptions.
		// http://blogs.msdn.com/b/vcblog/archive/2013/09/11/introducing-gw-compiler-switch.aspx
		$AdditionalOptions	"$BASE /Gw"
		// Strip unreferenced inline functions from object files to shrink .obj files and .lib files,
		// improve linker speed, and improve conformance.
		$AdditionalOptions	"$BASE /Zc:inline"

		// dimhotepus: Use thread-safe init by default.
		// $AdditionalOptions	"$BASE /Zc:threadSafeInit-"

		// dimhotepus: Drop warning suppression.
		// $AdditionalOptions	"$BASE /Wv:18" //warning C4456: declaration of 'accFactorZ' hides previous local declaration suppression
	
		// dimhotepus: Correctly define __cplusplus. TF2 backport.
		// Zc:__cplusplus makes the compiler use the real value for the __cplusplus macro
		// normally, MSVC sets it to C++97, for VC6 compatibility. This is stupid. and C++97 doesn't even exist!
		$AdditionalOptions	"$BASE /Zc:__cplusplus" [$AT_LEAST_VS2017]
	}
}
